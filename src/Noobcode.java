public class Noobcode {
    public static void main(String[] args) {
        // База
        System.out.println("Всегда ставить фигурные скобки, так Сашка сказал, и не ставит их на sout");
        System.out.println("Имена переменных всегда с маленькой буквы");

        // Полезные комбы
        System.out.println("\nCTRL + ALT + L = группировать код");

        // Сокращения
        System.out.println("\nsout = system out println");
        System.out.println("psvm = public static void main");

        //Операции отношения
        System.out.println("\n< - Меньше");
        System.out.println("> - Больше");
        System.out.println("== - Равно");

        //Разделительные символы
        // () - Применяется для указания списков параметров в определениях и вызовах методов.
        // Также используется для определения порядка выполнения операция в обычных выражениях, выражениях
        // внутри управляющих операторов и при приведении типов.
        // {} - Применяется для указания значений автоматически инициализируемых массивов. Также используется
        // для определения блоков кода, классов, методов и локальных областей действия.
        // [] - Применяется для объявления типов массивов. Используется для разыменования значений массива.
        // ; - Завершает операторы.
        // , - Отделяет последовательно следующие друг за другом идентификаторы при объявлении переменных.
        // Также применяется для объединения операторов внутри for.
        // . - Используется для отделения имен пакетов от имен подпакетов и классов. Также применяется для отделения
        // имени переменной или метода от имени ссылочной переменной.
        // :: - Используется для создания ссылки на метод или конструктор.
        // ... - Указывает параметр с переменным количеством аргументов.
        // @ - "эт", начинает аннотацию.


        // Побитовые операции
        System.out.println("\n~ - Побитовое унарное НЕ");
        System.out.println("& - Побитовое И");
        System.out.println("| - Побитовое ИЛИ");
        System.out.println("^ - Побитовое исключающее ИЛИ (XOR)");
        System.out.println(">> - Сдвиг вправо");
        System.out.println(">>> - Сдвиг вправо с заполнением нулями");
        System.out.println("&= - Побитовое И с присваиванием");
        System.out.println("|= - Побитовое ИЛИ с присваиванием");
        System.out.println("^= - Побитовое исключающее ИЛИ с присваиванием");
        System.out.println(">>= - Сдвиг вправо с присваиванием");
        System.out.println(">>>= - Сдвиг вправо с заполнением нулями и присваиванием");
        System.out.println("<<= - Сдвиг влево с присваиванием");

        // Арифметические операции
        System.out.println("\n+ - Сложение/унарный плюс");
        System.out.println("- - Вычитание/унарный минус");
        System.out.println("* - Умножение");
        System.out.println("/ - Деление");
        System.out.println("% - Деление по модулю");
        System.out.println("++ - Инкремент");
        System.out.println("-- - Декремент");
        System.out.println("+= - Сложение с присваиванием");
        System.out.println("-= - Вычитание с присваиванием");
        System.out.println("*= - Умножение с присваиванием");
        System.out.println("/= - Деление с присваиванием");

        // Символьные управляющие последовательности
        // \ddd - Восьмеричный символ (ddd)
        // \ uxxxx - Шестнадцатеричный символ Unicode (xxxx) (без пробела)
        // \' - Одинарная кавычка
        // \" - Двойная кавычка
        // ,\\ - Двойная косая черта
        // \r - Возврат каретки
        // \n - Новая строка (перевод строки)
        // \f - Подача страницы
        // \t - Табуляция
        // \b - Забой
        // \s - Пробел
        // \конец-строки -Строка продолжения (применяется только к текстовым блокам)



    }
}
